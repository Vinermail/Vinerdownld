import sys
import os
import json
import yt_dlp
import subprocess
import pythoncom
import win32com.client
from PyQt5.QtWidgets import (
    QApplication, QWidget, QVBoxLayout, QHBoxLayout,
    QPushButton, QLineEdit, QLabel, QFileDialog, QRadioButton, 
    QTextEdit, QProgressBar, QMessageBox, QGroupBox, QButtonGroup
)
from PyQt5.QtCore import QThread, pyqtSignal, Qt, QTimer
from PyQt5.QtGui import QFont, QIcon

if getattr(sys, 'frozen', False):  
    ROOT_DIR = os.path.dirname(sys.executable)
else:
    ROOT_DIR = os.path.dirname(os.path.abspath(__file__))

config_file_name = os.path.join(ROOT_DIR, "config.json")


class DownloadWorker(QThread):
    """–ü–æ—Ç–æ–∫ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å GUI"""
    progress = pyqtSignal(str)
    finished = pyqtSignal(str)
    error = pyqtSignal(str)

    def __init__(self, ydl_opts, download_url):
        super().__init__()
        self.ydl_opts = ydl_opts
        self.download_url = download_url

    def run(self):
        try:
            self.progress.emit(f"‚è≥ –ù–∞—á–∏–Ω–∞—é —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ: {self.download_url}")
            
            with yt_dlp.YoutubeDL(self.ydl_opts) as ydl:
                ydl.download([self.download_url])
            
            self.finished.emit("‚úÖ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
            
        except Exception as e:
            self.error.emit(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {str(e)}")


class YouTubeDownloaderGUI(QWidget):
    def __init__(self):
        super().__init__()
        self.config = self.load_config()
        self.download_folder = self.config.get("download_folder", "")
        self.cookie_file = self.config.get("cookie_file", "")
        self.worker = None
        
        self.init_ui()
        self.setup_first_start()

    def load_config(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ JSON-—Ñ–∞–π–ª–∞"""
        default_config = {
            "download_folder": "",
            "cookie_file": "",
            "first_start": True
        }

        try:
            with open(config_file_name, "r", encoding="utf-8") as f:
                return json.load(f)
        except (FileNotFoundError, json.JSONDecodeError):
            return default_config

    def save_config(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
        config = {
            "download_folder": self.download_folder,
            "cookie_file": self.cookie_file,
            "first_start": False
        }
        
        try:
            with open(config_file_name, "w", encoding="utf-8") as f:
                json.dump(config, f, indent=4, ensure_ascii=False)
        except IOError as e:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥: {e}")

    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.setWindowTitle("Vinerdowld")
        self.setGeometry(100, 100, 600, 500)
        self.setStyleSheet("""
            QWidget {
                background-color: #2b2b2b;
                color: #ffffff;
                font-family: Arial;
            }
            QLineEdit {
                padding: 8px;
                border: 2px solid #555;
                border-radius: 5px;
                background-color: #404040;
                font-size: 12px;
            }
            QPushButton {
                padding: 10px;
                background-color: #4CAF50;
                border: none;
                border-radius: 5px;
                color: white;
                font-weight: bold;
                font-size: 12px;
            }
            QPushButton:hover {
                background-color: #45a049;
            }
            QPushButton:pressed {
                background-color: #3d8b40;
            }
            QRadioButton {
                font-size: 12px;
                padding: 5px;
            }
            QTextEdit {
                border: 2px solid #555;
                border-radius: 5px;
                background-color: #404040;
                font-family: Consolas;
                font-size: 11px;
            }
            QGroupBox {
                font-weight: bold;
                border: 2px solid #555;
                border-radius: 5px;
                margin: 10px 0;
                padding-top: 10px;
            }
            QGroupBox::title {
                subcontrol-origin: margin;
                left: 10px;
                padding: 0 5px 0 5px;
            }
        """)

        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        main_layout = QVBoxLayout()

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel("YouTube Downloader")
        title_font = QFont()
        title_font.setPointSize(16)
        title_font.setBold(True)
        title_label.setFont(title_font)
        title_label.setAlignment(Qt.AlignCenter)
        main_layout.addWidget(title_label)

        # –ì—Ä—É–ø–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        settings_group = QGroupBox("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        settings_layout = QVBoxLayout()

        # –í—ã–±–æ—Ä –ø–∞–ø–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        folder_layout = QHBoxLayout()
        folder_layout.addWidget(QLabel("–ü–∞–ø–∫–∞ –∑–∞–≥—Ä—É–∑–æ–∫:"))
        self.folder_input = QLineEdit(self.download_folder)
        self.folder_input.setPlaceholderText("–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤...")
        folder_layout.addWidget(self.folder_input)
        
        self.folder_btn = QPushButton("–û–±–∑–æ—Ä")
        self.folder_btn.clicked.connect(self.choose_download_folder)
        folder_layout.addWidget(self.folder_btn)
        
        settings_layout.addLayout(folder_layout)

        # –§–∞–π–ª cookies
        cookie_layout = QHBoxLayout()
        cookie_layout.addWidget(QLabel("–§–∞–π–ª cookies:"))
        self.cookie_input = QLineEdit(self.cookie_file)
        self.cookie_input.setPlaceholderText("–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ - –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –≤–∏–¥–µ–æ...")
        cookie_layout.addWidget(self.cookie_input)
        
        self.cookie_btn = QPushButton("–û–±–∑–æ—Ä")
        self.cookie_btn.clicked.connect(self.choose_cookie_file)
        cookie_layout.addWidget(self.cookie_btn)
        
        settings_layout.addLayout(cookie_layout)
        
        settings_group.setLayout(settings_layout)
        main_layout.addWidget(settings_group)

        # –ì—Ä—É–ø–ø–∞ –∑–∞–≥—Ä—É–∑–∫–∏
        download_group = QGroupBox("–°–∫–∞—á–∏–≤–∞–Ω–∏–µ")
        download_layout = QVBoxLayout()

        # –ü–æ–ª–µ –≤–≤–æ–¥–∞ URL –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—è
        url_layout = QVBoxLayout()
        url_layout.addWidget(QLabel("YouTube —Å—Å—ã–ª–∫–∞ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ:"))
        self.url_input = QLineEdit()
        self.url_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ...")
        url_layout.addWidget(self.url_input)
        download_layout.addLayout(url_layout)

        # –í—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞
        format_layout = QHBoxLayout()
        format_layout.addWidget(QLabel("–§–æ—Ä–º–∞—Ç:"))
        
        self.format_group = QButtonGroup()
        self.mp3_radio = QRadioButton("MP3 (—Ç–æ–ª—å–∫–æ –∞—É–¥–∏–æ)")
        self.mp4_radio = QRadioButton("MP4 (–≤–∏–¥–µ–æ)")
        self.mp4_radio.setChecked(True)  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é MP4
        
        self.format_group.addButton(self.mp3_radio, 0)
        self.format_group.addButton(self.mp4_radio, 1)
        
        format_layout.addWidget(self.mp3_radio)
        format_layout.addWidget(self.mp4_radio)
        format_layout.addStretch()
        
        download_layout.addLayout(format_layout)

        # –ö–Ω–æ–ø–∫–∏
        button_layout = QHBoxLayout()
        
        self.download_btn = QPushButton("üì• –°–∫–∞—á–∞—Ç—å")
        self.download_btn.clicked.connect(self.start_download)
        button_layout.addWidget(self.download_btn)
        
        self.open_folder_btn = QPushButton("üìÅ –û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É")
        self.open_folder_btn.clicked.connect(self.open_folder)
        button_layout.addWidget(self.open_folder_btn)
        
        download_layout.addLayout(button_layout)
        
        download_group.setLayout(download_layout)
        main_layout.addWidget(download_group)

        # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
        self.progress_bar = QProgressBar()
        self.progress_bar.setVisible(False)
        main_layout.addWidget(self.progress_bar)

        # –õ–æ–≥
        log_layout = QVBoxLayout()
        log_layout.addWidget(QLabel("–ñ—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π:"))
        self.log_text = QTextEdit()
        self.log_text.setMaximumHeight(150)
        self.log_text.setReadOnly(True)
        log_layout.addWidget(self.log_text)
        main_layout.addLayout(log_layout)

        self.setLayout(main_layout)

    def setup_first_start(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ"""
        if self.config.get("first_start", True):
            self.log("(‚óï‚Äø‚óï) –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Vinerdowld!")
            self.log("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç —Å–∫–∞—á–∏–≤–∞—Ç—å –≤–∏–¥–µ–æ –∏ –∫–ª–∏–ø—ã —Å YouTube –≤ —Ñ–æ—Ä–º–∞—Ç–µ MP3 –∏–ª–∏ MP4.")
            
            if not self.download_folder:
                QMessageBox.information(
                    self, 
                    "–ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫", 
                    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Vinerdowld!\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤."
                )
                self.choose_download_folder()

    def log(self, message):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥"""
        self.log_text.append(message)
        self.log_text.ensureCursorVisible()

    def choose_download_folder(self):
        """–í—ã–±–æ—Ä –ø–∞–ø–∫–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫"""
        folder = QFileDialog.getExistingDirectory(
            self, 
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫",
            self.download_folder or os.path.expanduser("~/Downloads")
        )
        
        if folder:
            self.download_folder = folder
            self.folder_input.setText(folder)
            os.makedirs(folder, exist_ok=True)
            self.save_config()
            self.log(f"üìÅ –ü–∞–ø–∫–∞ –∑–∞–≥—Ä—É–∑–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {folder}")

    def choose_cookie_file(self):
        """–í—ã–±–æ—Ä —Ñ–∞–π–ª–∞ cookies"""
        file_path, _ = QFileDialog.getOpenFileName(
            self, 
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª cookies",
            self.cookie_file or "",
            "Text files (*.txt);;All files (*.*)"
        )
        
        if file_path:
            self.cookie_file = file_path
            self.cookie_input.setText(file_path)
            self.save_config()
            self.log(f"üç™ –§–∞–π–ª cookies —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {file_path}")

    def get_ydl_options(self):
        """–ü–æ–ª—É—á–∞–µ—Ç –æ–ø—Ü–∏–∏ –¥–ª—è yt-dlp –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞"""
        if not self.download_folder:
            raise ValueError("–ù–µ –≤—ã–±—Ä–∞–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫!")

        base_opts = {
            "outtmpl": os.path.join(self.download_folder, "%(title)s.%(ext)s"),
        }

        # –î–æ–±–∞–≤–ª—è–µ–º cookies –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–∞–π–ª
        if self.cookie_file and os.path.exists(self.cookie_file):
            base_opts["cookiefile"] = self.cookie_file

        if self.mp3_radio.isChecked():
            # MP3 —Ñ–æ—Ä–º–∞—Ç
            base_opts.update({
                "format": "bestaudio/best",
                "postprocessors": [
                    {"key": "FFmpegExtractAudio", "preferredcodec": "mp3", "preferredquality": "192"}
                ],
            })
        else:
            # MP4 —Ñ–æ—Ä–º–∞—Ç
            base_opts.update({
                "format": "bestvideo[ext=mp4]+bestaudio[ext=m4a]/mp4",
                "merge_output_format": "mp4",
            })

        return base_opts

    def get_download_url(self, query):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å"""
        query = query.strip()
        if "youtube.com" in query or "youtu.be" in query:
            return query
        else:
            return f"ytsearch1:{query}"

    def start_download(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏"""
        if not self.url_input.text().strip():
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ!")
            return

        if not self.download_folder:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫!")
            return

        try:
            ydl_opts = self.get_ydl_options()
            download_url = self.get_download_url(self.url_input.text())

            # –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
            self.download_btn.setText("‚è≥ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ...")
            self.download_btn.setEnabled(False)
            self.progress_bar.setVisible(True)
            self.progress_bar.setRange(0, 0)  # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å

            # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏
            self.worker = DownloadWorker(ydl_opts, download_url)
            self.worker.progress.connect(self.log)
            self.worker.finished.connect(self.download_finished)
            self.worker.error.connect(self.download_error)
            self.worker.start()

        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
            self.reset_download_button()

    def download_finished(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏"""
        self.log(message)
        self.log(f"üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {self.download_folder}")
        self.reset_download_button()
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–∞–ø–∫—É
        self.open_folder()

    def download_error(self, error_message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏"""
        self.log(error_message)
        QMessageBox.critical(self, "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏", error_message)
        self.reset_download_button()

    def reset_download_button(self):
        """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏"""
        self.download_btn.setText("üì• –°–∫–∞—á–∞—Ç—å")
        self.download_btn.setEnabled(True)
        self.progress_bar.setVisible(False)

    def open_folder(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–∞–ø–∫—É —Å –∑–∞–≥—Ä—É–∑–∫–∞–º–∏ –∏ –≤—ã–¥–µ–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ñ–∞–π–ª"""
        if not self.download_folder or not os.path.exists(self.download_folder):
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ü–∞–ø–∫–∞ –∑–∞–≥—Ä—É–∑–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            return

        try:
            files = [os.path.join(self.download_folder, f) 
                    for f in os.listdir(self.download_folder)
                    if os.path.isfile(os.path.join(self.download_folder, f))]

            folder_path = os.path.normpath(self.download_folder)

            if not files:
                # –ü–∞–ø–∫–∞ –ø—É—Å—Ç–∞—è - –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –µ—ë
                self.log("üìÅ –û—Ç–∫—Ä—ã–≤–∞—é –ø—É—Å—Ç—É—é –ø–∞–ø–∫—É –∑–∞–≥—Ä—É–∑–æ–∫...")
                os.startfile(folder_path)
                return

            # –ï—Å—Ç—å —Ñ–∞–π–ª—ã - –ø—Ä–æ–±—É–µ–º –≤—ã–¥–µ–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π
            latest_file = max(files, key=os.path.getctime)
            normalized_path = os.path.normpath(latest_file)
            
            # –ü—Ä–æ–±—É–µ–º –≤—ã–¥–µ–ª–∏—Ç—å —Ñ–∞–π–ª, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è - –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Å—Ç–æ –ø–∞–ø–∫—É
            try:
                subprocess.run(['explorer', '/select,', normalized_path], check=True, timeout=3)
                self.log(f"üìÅ –§–∞–π–ª –≤—ã–¥–µ–ª–µ–Ω: {os.path.basename(latest_file)}")
            except (subprocess.CalledProcessError, subprocess.TimeoutExpired, FileNotFoundError):
                # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –æ–±—ã—á–Ω—É—é –ø–∞–ø–∫—É
                self.log("üìÅ –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

        except Exception as e:
            # –í —Å–ª—É—á–∞–µ –ª—é–±–æ–π –æ—à–∏–±–∫–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–∞–ø–∫—É
            try:
                os.startfile(self.download_folder)
                self.log("üìÅ –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            except Exception as e2:
                self.log(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É: {e2}")

    def closeEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Ç–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –µ—Å–ª–∏ –æ–Ω –∑–∞–ø—É—â–µ–Ω
        if self.worker and self.worker.isRunning():
            self.worker.terminate()
            self.worker.wait()
        
        self.save_config()
        event.accept()


def main():
    app = QApplication(sys.argv)
    
    app.setWindowIcon(QIcon("icon.ico"))
    
    downloader = YouTubeDownloaderGUI()
    downloader.show()
    
    sys.exit(app.exec_())


if __name__ == "__main__":
    main()